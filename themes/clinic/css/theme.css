html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; vertical-align: baseline; }

body, html { height: 100%; }

img, fieldset, a img { border: none; }

input[type="text"], input[type="email"], input[type="tel"], textarea { -webkit-appearance: none; }

input[type="submit"], button { cursor: pointer; }

input[type="submit"]::-moz-focus-inner, button::-moz-focus-inner { padding: 0; border: 0; }

textarea { overflow: auto; }

input, button { margin: 0; padding: 0; border: 0; }

div, input, textarea, select, button, h1, h2, h3, h4, h5, h6, a, span, a:focus { outline: none; }

ul, ol { list-style-type: none; }

table { border-spacing: 0; border-collapse: collapse; width: 100%; }

html { box-sizing: border-box; }

*, *:before, *:after { box-sizing: inherit; }

@font-face { font-family: "RobotoRegular"; src: url("../fonts/Roboto-Regular.eot"); src: url("../fonts/Roboto-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Regular.ttf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: "RobotoBold"; src: url("../fonts/Roboto-Bold.eot"); src: url("../fonts/Roboto-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Bold.ttf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: "RobotoBoldItalic"; src: url("../fonts/Roboto-BoldItalic.eot"); src: url("../fonts/Roboto-BoldItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-BoldItalic.ttf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: "RobotoMedium"; src: url("../fonts/Roboto-Medium.eot"); src: url("../fonts/Roboto-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Medium.ttf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: "RobotoLight"; src: url("../fonts/Roboto-Light.eot"); src: url("../fonts/Roboto-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Light.ttf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: "RobotoLightItalic"; src: url("../fonts/Roboto-LightItalic.eot"); src: url("../fonts/Roboto-LightItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-LightItalic.ttf") format("truetype"); font-weight: 300; font-style: italic; }

@font-face { font-family: "RobotoMediumItalic"; src: url("../fonts/Roboto-MediumItalic.eot"); src: url("../fonts/Roboto-MediumItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-MediumItalic.ttf") format("truetype"); font-weight: 300; font-style: italic; }

@font-face { font-family: "RobotoThin"; src: url("../fonts/Roboto-Thin.eot"); src: url("../fonts/Roboto-Thin.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Thin.ttf") format("truetype"); font-weight: 300; font-style: italic; }

@font-face { font-family: "Roboto-ThinItalic"; src: url("../fonts/Roboto-ThinItalic.eot"); src: url("../fonts/Roboto-ThinItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-ThinItalic.ttf") format("truetype"); font-weight: normal; font-style: normal; }

@font-face { font-family: "svgfont"; src: url("../fonts/svgfont.eot"); src: url("../fonts/svgfont.eot?#iefix") format("eot"), url("../fonts/svgfont.woff") format("woff"), url("../fonts/svgfont.ttf") format("truetype"); font-weight: normal; font-style: normal; }

.icon, [class^="icon-"], [class*=" icon-"] { font-family: "svgfont"; font-style: normal; font-weight: normal; text-rendering: auto; speak: none; line-height: 1; vertical-align: middle; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }

.icon, [class^="icon-"], [class*=" icon-"] { display: inline-block; }

body { font-family: opensans, "RobotoLight", sans-serif; font-size: 14px; line-height: 1.25; min-width: 320px; min-height: 320px; }

.clearfix { *zoom: 1; }

.clearfix:before, .clearfix:after { display: table; content: ""; line-height: 0; }

.clearfix:after { clear: both; }

a, a:before, button, button:before, input[type="button"], input[type="submit"] { transition: border-color 0.1s ease-in, color 0.1s ease-in, background-color 0.1s ease-in; }

.is-hidden { display: none !important; }

main { min-height: 100%; }

.map { height: 500px; }

@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {

 * { -webkit-text-size-adjust: none; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC5zY3NzIiwiX21peGlucy5zY3NzIiwiX2ZvbnRzLnNjc3MiLCJfc3ZnZm9udC5zYXNzIiwiX2NvbW1vbi5zY3NzIiwiX2xheW91dHMuc2NzcyIsInBhZ2VzL21haW4vX21hcC5zY3NzIiwidmVuZG9ycy9fbWVkaWEuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxZUFRRSxVQUFVLENBQ1YsV0FBVyxDQUNYLFVBQVUsQ0FDVix5QkFBeUIsRUFDMUI7O0FBRUQsYUFDRSxhQUFhLEVBQ2Q7O0FBRUQsdUJBQ0UsYUFBYSxFQUNkOztBQUVELHVFQUlFLHlCQUF5QixFQUMxQjs7QUFFRCwrQkFFRSxnQkFBZ0IsRUFNakI7O0FBUkQsbUVBS0ksV0FBVyxDQUNYLFVBQVUsRUFDWDs7QUFHSCxXQUNFLGVBQWUsRUFDaEI7O0FBRUQsZ0JBQ0UsVUFBVSxDQUNWLFdBQVcsQ0FDWCxVQUFVLEVBQ1g7O0FBRUQsaUZBRUUsY0FBYyxFQUNmOztBQUVELFNBQ0Usc0JBQXNCLEVBQ3ZCOztBQVFELFFBQ0Usa0JBQWtCLENBQ2xCLDBCQUEwQixDQUMxQixZQUFZLEVBQ2I7O0FBR0QsT0FDRSx1QkFBdUIsRUFDeEI7O0FBRUQsdUJBQ0Usb0JBQW9CLEVBQ3JCOztBQ29CQyxhQUNFLDZCQ2xHeUIsQ0RtR3pCLHdDQUFRLENBRVIsa0lBQW1ILENBRW5ILG9CQVBrQyxDQVFsQyxtQkFSK0MsRUFBQTs7QUFDakQsYUFDRSwwQkNoR3NCLENEaUd0QixxQ0FBUSxDQUVSLDRIQUFtSCxDQUVuSCxvQkFQa0MsQ0FRbEMsbUJBUitDLEVBQUE7O0FBQ2pELGFBQ0UsZ0NDOUY0QixDRCtGNUIsMkNBQVEsQ0FFUix3SUFBbUgsQ0FFbkgsb0JBUGtDLENBUWxDLG1CQVIrQyxFQUFBOztBQUNqRCxhQUNFLDRCQzVGd0IsQ0Q2RnhCLHVDQUFRLENBRVIsZ0lBQW1ILENBRW5ILG9CQVBrQyxDQVFsQyxtQkFSK0MsRUFBQTs7QUFDakQsYUFDRSwyQkMxRnVCLENEMkZ2QixzQ0FBUSxDQUVSLDhIQUFtSCxDQUVuSCxvQkFQa0MsQ0FRbEMsbUJBUitDLEVBQUE7O0FBQ2pELGFBQ0UsaUNDeEY2QixDRHlGN0IsNENBQVEsQ0FFUiwwSUFBbUgsQ0FFbkgsaUJDN0Z3RCxDRDhGeEQsbUJDOUZnRSxFQUFBOztBRHVGbEUsYUFDRSxrQ0N0RjhCLENEdUY5Qiw2Q0FBUSxDQUVSLDRJQUFtSCxDQUVuSCxpQkMzRjBELENENEYxRCxtQkM1RmtFLEVBQUE7O0FEcUZwRSxhQUNFLDBCQ3BGc0IsQ0RxRnRCLHFDQUFRLENBRVIsNEhBQW1ILENBRW5ILGlCQ3pGMEMsQ0QwRjFDLG1CQzFGa0QsRUFBQTs7QURtRnBELGFBQ0UsaUNDbEY2QixDRG1GN0IsMkNBQVEsQ0FFUix3SUFBbUgsQ0FFbkgsb0JBUGtDLENBUWxDLG1CQVIrQyxFQUFBOztBRWhHbkQsYUFDQyx1QkFBdUIsQ0FDdkIsaUNBQVEsQ0FDUixtSkFBc0ksQ0FDdEksb0JBQW9CLENBQ3BCLG1CQUFtQixFQUFBOztBQUVwQiw2Q0FDQyx1QkFBdUIsQ0FDdkIsbUJBQW1CLENBQ25CLG9CQUFvQixDQUNwQixxQkFBcUIsQ0FDckIsWUFBWSxDQUNaLGVBQWUsQ0FDZix1QkFBdUIsQ0FDdkIsb0NBQW9DLENBQ3BDLG1DQUFtQyxFQUFHOztBQUV2Qyw2Q0FFQyxzQkFBc0IsRUFBRzs7QUNwQjFCLE9BQ0UsaURBQWlELENBQ2pELGdCQUFnQixDQUNoQixrQkFBa0IsQ0FDbEIsaUJBQWlCLENBQ2pCLGtCQUFrQixFQUNuQjs7QUNKRCxhQUNFLFFBQVMsRUFDVjs7QUFFRCxvQ0FFRSxlQUFlLENBQ2YsWUFBWSxDQUNaLGVBQWUsRUFDaEI7O0FBRUQsa0JBQ0UsWUFBWSxFQUNiOztBQUVELGlGQU1FLHlGQUF5RixFQUMxRjs7QUEyRkQsYUFDRSx5QkFBeUIsRUFDMUI7O0FBRUQsT0FDRSxpQkFBaUIsRUFDbEI7O0FDekhELE9BQ0UsY0FBYyxFQUNmOztBQ3FHQzs7Q1A1Q0EsSUFDRSwrQkFBK0IsRUFDaEMsRUFBQSIsImZpbGUiOiJ0aGVtZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsIGgxLCBoMiwgaDMsIGg0LCBoNSxcclxuaDYsIHAsIGJsb2NrcXVvdGUsIHByZSwgYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLFxyXG5jaXRlLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsIHNtYWxsLFxyXG5zdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsIGIsIHUsIGksIGNlbnRlciwgZGwsIGR0LFxyXG5kZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLFxyXG50Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLCBhcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLFxyXG5lbWJlZCwgZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgbWVudSwgbmF2LFxyXG5vdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksIHRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuYm9keSwgaHRtbCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5pbWcsIGZpZWxkc2V0LCBhIGltZyB7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxyXG50ZXh0YXJlYSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLFxyXG5idXR0b24ge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgJjo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gIH1cclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG5pbnB1dCwgYnV0dG9uIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IDA7XHJcbn1cclxuXHJcbmRpdiwgaW5wdXQsIHRleHRhcmVhLCBzZWxlY3QsIGJ1dHRvbixcclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgYSwgc3BhbiwgYTpmb2N1cyB7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxudWwsIG9sIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbn1cclxuXHJcbkBpbmNsdWRlIGlwaG9uZSB7XHJcbiAgKiB7XHJcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLy8gYm94LXNpemluZyBtb2RlbCByZXNldFxyXG5odG1sIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XHJcbiAgYm94LXNpemluZzogaW5oZXJpdDtcclxufVxyXG4iLCIvLyB3aWR0aFxyXG5AbWl4aW4gcigkd2lkdGgpIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICR3aWR0aCArIFwicHhcIikge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBoZWlnaHRcclxuQG1peGluIHJoKCRoZWlnaHQpIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiAkaGVpZ2h0ICsgXCJweFwiKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBmcygkc2l6ZVZhbHVlOiAxNikge1xyXG4gIGZvbnQtc2l6ZTogJHNpemVWYWx1ZSArIHB4O1xyXG4gIGZvbnQtc2l6ZTogJHNpemVWYWx1ZSAvIDEwICsgcmVtO1xyXG59XHJcblxyXG5AbWl4aW4gdGV4dC1vdmVyZmxvdyB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAtbXMtdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxufVxyXG5cclxuQG1peGluIGllIHtcclxuICAqZGlzcGxheTogaW5saW5lO1xyXG4gICp6b29tOiAxO1xyXG59XHJcblxyXG5AbWl4aW4gYm94IHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4lcHNldWRvIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICY6YmVmb3JlLCAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiIFwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBwc2V1ZG8ge1xyXG4gIEBleHRlbmQgJXBzZXVkbztcclxufVxyXG5cclxuQG1peGluIGNvdmVyZGl2IHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5AbWl4aW4gY292ZXIge1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xyXG59XHJcblxyXG5AbWl4aW4gYmctc2l6ZSgkd2lkdGg6IDEwMCUsICRoZWlnaHQ6IDEwMCUpIHtcclxuICBiYWNrZ3JvdW5kLXNpemU6ICR3aWR0aCAkaGVpZ2h0O1xyXG59XHJcblxyXG4vLyByZXRpbmEsIGFsc28gYXZhaWxhYmxlIGFzICtoZHBpXHJcbkBtaXhpbiByZXRpbmEge1xyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMikge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyB2ZXJ0aWNhbC1hbGlnbiBhdCBjZW50ZXJcclxuQG1peGluIHZjZW50ZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcblxyXG4gIC8vICt0cmFuc2xhdGUoLTUwJSwtNTAlKVxyXG59XHJcblxyXG5AbWl4aW4gZygkY29sb3IxLCAkY29sb3IyKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yMTtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoJGNvbG9yMSwgJGNvbG9yMik7XHJcbn1cclxuXHJcbkBtaXhpbiBnaCgkY29sb3IxLCAkY29sb3IyKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yMTtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRjb2xvcjEsICRjb2xvcjIpO1xyXG59XHJcblxyXG4vL2FzZGZhc3QgZm9udC1mYW1pbHlcclxuQG1peGluIGZvbnQoJGFsaWFzLCAkbmFtZSwgJGZ3OiBub3JtYWwsICRmczogbm9ybWFsKSB7XHJcbiAgQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJGFsaWFzO1xyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9cIiArICRuYW1lICsgXCIuZW90XCIpO1xyXG4gICAgLy9zcmM6IHVybChcIi4uL2ZvbnRzL1wiICsgJG5hbWUgKyBcIi5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9cIiArICRuYW1lICsgXCIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCAvdXJsKFwiLi4vZm9udHMvXCIgKyAkbmFtZSArIFwiLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcclxuICAgIHNyYzogdXJsKFwiLi4vZm9udHMvXCIgKyAkbmFtZSArIFwiLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL1wiICsgJG5hbWUgKyBcIi50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XHJcblxyXG4gICAgZm9udC13ZWlnaHQ6ICRmdztcclxuICAgIGZvbnQtc3R5bGU6ICRmcztcclxuICB9XHJcbn1cclxuXHJcbi8vIHVzYWdlOlxyXG4vLytmb250KGJsYWNrLCBjeXRpYXByby1ibGFjay13ZWJmb250KVxyXG5cclxuLy8gUk9UQVRFXHJcbkBtaXhpbiByb3RhdGUoJGRlZzogMCwgJG0xMTogMCwgJG0xMjogMCwgJG0yMTogMCwgJG0yMjogMCkge1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKCRkZWcgKyBkZWcpO1xyXG59XHJcblxyXG5AbWl4aW4gdHIoJHdoYXQpIHtcclxuICB0cmFuc2l0aW9uOiAkd2hhdDtcclxufVxyXG5cclxuQG1peGluIGhpZGUtdGV4dCB7XHJcbiAgZm9udDogMCAvIDAgYTtcclxuICB0ZXh0LXNoYWRvdzogbm9uZTtcclxuICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbkBtaXhpbiBoaWRldGV4dCB7XHJcbiAgQGluY2x1ZGUgaGlkZS10ZXh0O1xyXG59XHJcblxyXG5AbWl4aW4ganVzdGlmeSB7XHJcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgdGV4dC1qdXN0aWZ5OiBuZXdzcGFwZXI7XHJcbiAgem9vbTogMTtcclxuXHJcbiAgLy8gdGV4dC1hbGlnbi1sYXN0OiBqdXN0aWZ5XHJcbiAgJjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDBweDtcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gdmVydGljYWwge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDA7XHJcblxyXG4gICY6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gY2xyIHtcclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiIFwiO1xyXG4gICAgZGlzcGxheTogdGFibGU7XHJcbiAgICBjbGVhcjogYm90aDtcclxuICB9XHJcblxyXG4gICp6b29tOiAxO1xyXG59XHJcblxyXG5AbWl4aW4gcGxhY2Vob2xkZXItY29sb3IoJGNvbG9yKSB7XHJcbiAgJjotbW96LXBsYWNlaG9sZGVyLFxyXG4gICY6Oi1tb3otcGxhY2Vob2xkZXIge1xyXG4gICAgY29sb3I6ICRjb2xvcjtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG5cclxuICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xyXG4gICY6OnBsYWNlaG9sZGVyIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGdyYXkge1xyXG4gIGZpbHRlcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO3V0ZjgsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnPjxmaWx0ZXIgaWQ9J2dyYXlzY2FsZSc+PGZlQ29sb3JNYXRyaXggdHlwZT0nbWF0cml4JyB2YWx1ZXM9JzAuMzMzMyAwLjMzMzMgMC4zMzMzIDAgMCAwLjMzMzMgMC4zMzMzIDAuMzMzMyAwIDAgMC4zMzMzIDAuMzMzMyAwLjMzMzMgMCAwIDAgMCAwIDEgMCcvPjwvZmlsdGVyPjwvc3ZnPiNncmF5c2NhbGVcIik7XHJcblxyXG4gIC8vIEZpcmVmb3ggMTArXHJcbiAgZmlsdGVyOiBncmF5O1xyXG5cclxuICAvLyBJRTYtOVxyXG4gIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XHJcblxyXG4gIC8vIENocm9tZSAxOSsgJiBTYWZhcmkgNitcclxuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKGdyYXlTY2FsZT0xKTtcclxuICAtbXMtZmlsdGVyOiBcInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKGdyYXlTY2FsZT0xKVwiO1xyXG59XHJcblxyXG5AbWl4aW4gZ3JheS1oYWxmIHtcclxuICBmaWx0ZXI6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbDt1dGY4LDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJz48ZmlsdGVyIGlkPSdncmF5c2NhbGUnPjxmZUNvbG9yTWF0cml4IHR5cGU9J3NhdHVyYXRlJyB2YWx1ZXM9JzAuNScvPjwvZmlsdGVyPjwvc3ZnPiNncmF5c2NhbGVcIik7XHJcblxyXG4gIC8vIEZpcmVmb3ggMTArXHJcbiAgZmlsdGVyOiBncmF5IGFscGhhKG9wYWNpdHkgPSA1MCk7XHJcblxyXG4gIC8vIElFNi05XHJcbiAgLXdlYmtpdC1maWx0ZXI6IGdyYXlzY2FsZSg1MCUpO1xyXG5cclxuICAvLyBDaHJvbWUgMTkrICYgU2FmYXJpIDYrXHJcbn1cclxuXHJcbkBtaXhpbiBncmF5LXplcm8ge1xyXG4gIGZpbHRlcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO3V0ZjgsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnPjxmaWx0ZXIgaWQ9J2dyYXlzY2FsZSc+PGZlQ29sb3JNYXRyaXggdHlwZT0nbWF0cml4JyB2YWx1ZXM9JzEgMCAwIDAgMCwgMCAxIDAgMCAwLCAwIDAgMSAwIDAsIDAgMCAwIDEgMCcvPjwvZmlsdGVyPjwvc3ZnPiNncmF5c2NhbGVcIik7XHJcbiAgLXdlYmtpdC1maWx0ZXI6IGdyYXlzY2FsZSgwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiB1bnNlbGVjdGFibGUge1xyXG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcclxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xyXG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcclxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xyXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcclxuICB1c2VyLXNlbGVjdDogbm9uZTtcclxufVxyXG5cclxuQG1peGluIG5vc2VsIHtcclxuICBAaW5jbHVkZSB1bnNlbGVjdGFibGU7XHJcbn1cclxuXHJcbkBtaXhpbiBwcmV2ZW50LXRleHQge1xyXG4gIC1tcy13b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XHJcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xyXG4gIC1tb3otaHlwaGVuczogYXV0bztcclxuICBoeXBoZW5zOiBhdXRvO1xyXG59XHJcblxyXG5AbWl4aW4gZm9udC1zbW9vdGhpbmcoJHZhbDogYW50aWFsaWFzZWQpIHtcclxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiAkdmFsO1xyXG4gIC1tb3otZm9udC1zbW9vdGhpbmc6ICR2YWw7XHJcbiAgLW1zLWZvbnQtc21vb3RoaW5nOiAkdmFsO1xyXG4gIC1vLWZvbnQtc21vb3RoaW5nOiAkdmFsO1xyXG59XHJcblxyXG5AbWl4aW4gc2VsZWN0aW9uIHtcclxuICAmIDo6c2VsZWN0aW9uIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxuXHJcbiAgJiA6Oi1tb3otc2VsZWN0aW9uIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIHNlbCB7XHJcbiAgQGluY2x1ZGUgc2VsZWN0aW9uO1xyXG59XHJcblxyXG5AbWl4aW4gZ3B1IHtcclxuICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlM2QoMCwgMCwgMCkpO1xyXG59XHJcblxyXG5AbWl4aW4gc21vb3RoLXRyaWFuZ2xlIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDAuMDVkZWcpO1xyXG4gIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xyXG4gIC1vLXRyYW5zZm9ybTogcm90YXRlKDAuMDVkZWcpO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDAuMDVkZWcpO1xyXG59XHJcblxyXG5AbWl4aW4gc2Nyb2xsYmFyIHtcclxuICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBzY3JvbGxiYXItdHJhY2sge1xyXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIHNjcm9sbGJhci10aHVtYiB7XHJcbiAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gc2Nyb2xsYmFyLXRyYWNrLXBpZWNlIHtcclxuICAmOjotd2Via2l0LXNjcm9sbGJhci10cmFjay1waWVjZSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vdHJpYW5nbGVcclxuQG1peGluIGFycigkd2lkdGgsICRoZWlnaHQsICRiZywgJGRpcmVjdGlvbikge1xyXG4gIHdpZHRoOiAwcHg7XHJcbiAgaGVpZ2h0OiAwcHg7XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gdCB7XHJcbiAgICBib3JkZXItd2lkdGg6IDAgKCR3aWR0aCAvIDIgKyBweCkgKCRoZWlnaHQgKyBweCkgKCR3aWR0aCAvIDIgKyBweCk7XHJcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICRiZyB0cmFuc3BhcmVudDtcclxuICB9XHJcblxyXG4gIEBpZiAkZGlyZWN0aW9uID09IHIge1xyXG4gICAgYm9yZGVyLXdpZHRoOiAoJGhlaWdodCAvIDIgKyBweCkgMCAoJGhlaWdodCAvIDIgKyBweCkgKCR3aWR0aCArIHB4KTtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJGJnO1xyXG4gIH1cclxuXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gYiB7XHJcbiAgICBib3JkZXItd2lkdGg6ICgkaGVpZ2h0ICsgcHgpICgkd2lkdGggLyAyICsgcHgpIDAgKCR3aWR0aCAvIDIgKyBweCk7XHJcbiAgICBib3JkZXItY29sb3I6ICRiZyB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcclxuICB9XHJcblxyXG4gIEBpZiAkZGlyZWN0aW9uID09IGwge1xyXG4gICAgYm9yZGVyLXdpZHRoOiAoJGhlaWdodCAvIDIgKyBweCkgKCR3aWR0aCArIHB4KSAoJGhlaWdodCAvIDIgKyBweCkgMDtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgJGJnIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gdGwge1xyXG4gICAgYm9yZGVyLXdpZHRoOiAoJGhlaWdodCArIHB4KSAoJHdpZHRoICsgcHgpIDAgMDtcclxuICAgIGJvcmRlci1jb2xvcjogJGJnIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gdHIge1xyXG4gICAgYm9yZGVyLXdpZHRoOiAwICgkd2lkdGggKyBweCkgKCRoZWlnaHQgKyBweCkgMDtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgJGJnIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gYnIge1xyXG4gICAgYm9yZGVyLXdpZHRoOiAwIDAgKCRoZWlnaHQgKyBweCkgKCR3aWR0aCArIHB4KTtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJGJnIHRyYW5zcGFyZW50O1xyXG4gIH1cclxuXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gYmwge1xyXG4gICAgYm9yZGVyLXdpZHRoOiAoJGhlaWdodCArIHB4KSAwIDAgKCR3aWR0aCArIHB4KTtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJGJnO1xyXG4gIH1cclxufVxyXG5cclxuLy8gZXhhbXBsZVxyXG4vLyArYXJyKDUwMCw1MCwgIzAwMCwgbClcclxuLy8gK2Fycig1MDAsNTAsICMwMDAsIGJsKVxyXG5cclxuQG1peGluIHJvdGF0ZSgkdmFyKSB7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoJHZhciArIGRlZyk7XHJcbn1cclxuXHJcbkBtaXhpbiBibHVyKCR2YXIpIHtcclxuICAtd2Via2l0LWZpbHRlcjogYmx1cigkdmFyKTtcclxuICBmaWx0ZXI6IGJsdXIoJHZhcik7XHJcbn1cclxuXHJcbkBtaXhpbiBzY2FsZSgkdmFyKSB7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgkdmFyKTtcclxufVxyXG5cclxuQG1peGluIGNvdW50ZXIoJHZhciwgJHNlcCkge1xyXG4gIGNvdW50ZXItcmVzZXQ6IGxpc3QgKyAkdmFyO1xyXG5cclxuICA+IGxpIHtcclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogY291bnRlcihsaXN0ICsgJHZhcikgJHNlcDtcclxuICAgICAgY291bnRlci1pbmNyZW1lbnQ6IGxpc3QgKyAkdmFyO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQGZ1bmN0aW9uIG1ha2Vsb25nc2hhZG93KCRjb2xvcikge1xyXG4gICR2YWw6IDBweCAwcHggJGNvbG9yO1xyXG5cclxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIDIwMCB7XHJcbiAgICAkdmFsOiAjeyR2YWx9LCAjeyRpfXB4ICN7JGl9cHggI3skY29sb3J9O1xyXG4gIH1cclxuXHJcbiAgQHJldHVybiAkdmFsO1xyXG59XHJcblxyXG5AbWl4aW4gbG9uZ3NoYWRvdygkY29sb3IpIHtcclxuICB0ZXh0LXNoYWRvdzogbWFrZWxvbmdzaGFkb3coJGNvbG9yKTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIGdyYWRpZW50LWxvbmdzaGFkb3coJGNvbG9yX2EsICRjb2xvcl9iLCAkc3RlcG51bSwgJG9wYWNpdHk6IDEpIHtcclxuICAkZ3JhZGllbnRfc3RlcHM6IG51bGw7XHJcblxyXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJHN0ZXBudW0ge1xyXG4gICAgJHdlaWdodDogKCRpIC0gMSkgLyAkc3RlcG51bSAqIDEwMDtcclxuICAgICRjb2xvdXJfbWl4OiBtaXgoJGNvbG9yX2IsIHJnYmEoJGNvbG9yX2EsICRvcGFjaXR5KSwgJHdlaWdodCk7XHJcbiAgICAkc2VwZXJhdG9yOiBudWxsO1xyXG5cclxuICAgIEBpZiAkaSAhPSAkc3RlcG51bSB7XHJcbiAgICAgICRzZXBlcmF0b3I6ICN7XCIsXCJ9O1xyXG4gICAgfVxyXG5cclxuICAgICRncmFkaWVudF9zdGVwczogYXBwZW5kKCN7JGdyYWRpZW50X3N0ZXBzfSwgI3skaX1weCAjeyRpfXB4ICRjb2xvdXJfbWl4ICRzZXBlcmF0b3IpO1xyXG4gIH1cclxuXHJcbiAgQHJldHVybiAkZ3JhZGllbnRfc3RlcHM7XHJcbn0iLCJAaW5jbHVkZSBmb250KFwiUm9ib3RvUmVndWxhclwiLCBcIlJvYm90by1SZWd1bGFyXCIpO1xuXG5AaW5jbHVkZSBmb250KFwiUm9ib3RvQm9sZFwiLCBcIlJvYm90by1Cb2xkXCIpO1xuXG5AaW5jbHVkZSBmb250KFwiUm9ib3RvQm9sZEl0YWxpY1wiLCBcIlJvYm90by1Cb2xkSXRhbGljXCIpO1xuXG5AaW5jbHVkZSBmb250KFwiUm9ib3RvTWVkaXVtXCIsIFwiUm9ib3RvLU1lZGl1bVwiKTtcblxuQGluY2x1ZGUgZm9udChcIlJvYm90b0xpZ2h0XCIsIFwiUm9ib3RvLUxpZ2h0XCIpO1xuXG5AaW5jbHVkZSBmb250KFwiUm9ib3RvTGlnaHRJdGFsaWNcIiwgXCJSb2JvdG8tTGlnaHRJdGFsaWNcIiwgMzAwLCBpdGFsaWMpO1xuXG5AaW5jbHVkZSBmb250KFwiUm9ib3RvTWVkaXVtSXRhbGljXCIsIFwiUm9ib3RvLU1lZGl1bUl0YWxpY1wiLCAzMDAsIGl0YWxpYyk7XG5cbkBpbmNsdWRlIGZvbnQoXCJSb2JvdG9UaGluXCIsIFwiUm9ib3RvLVRoaW5cIiwgMzAwLCBpdGFsaWMpO1xuXG5AaW5jbHVkZSBmb250KFwiUm9ib3RvLVRoaW5JdGFsaWNcIiwgXCJSb2JvdG8tVGhpbkl0YWxpY1wiKTtcbiIsIkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogXCJzdmdmb250XCI7XG5cdHNyYzogdXJsKCcuLi9mb250cy9zdmdmb250LmVvdCcpO1xuXHRzcmM6IHVybCgnLi4vZm9udHMvc3ZnZm9udC5lb3Q/I2llZml4JykgZm9ybWF0KCdlb3QnKSwgdXJsKCcuLi9mb250cy9zdmdmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgdXJsKCcuLi9mb250cy9zdmdmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0Zm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbiVpY29uIHtcblx0Zm9udC1mYW1pbHk6IFwic3ZnZm9udFwiO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cdHRleHQtcmVuZGVyaW5nOiBhdXRvO1xuXHRzcGVhazogbm9uZTtcblx0bGluZS1oZWlnaHQ6IDE7XG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyB9XG5cbi5pY29uLCBbY2xhc3NePVwiaWNvbi1cIl0sIFtjbGFzcyo9XCIgaWNvbi1cIl0ge1xuXHRAZXh0ZW5kICVpY29uO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuXG4vLyRpY29uLWFuYWx5dGljczogXCJcXEUwMDFcIlxuLy8kaWNvbi1jbG9zZTogXCJcXEUwMDJcIlxuLy8kaWNvbi1jb21wYW55OiBcIlxcRTAwM1wiXG4vLyRpY29uLWNvbnRhY3RzOiBcIlxcRTAwNFwiXG4vLyRpY29uLXBhcnRuZXJzOiBcIlxcRTAwNVwiXG4vLyRpY29uLXByZW1pdW0tYmFkZ2U6IFwiXFxFMDA2XCJcbi8vJGljb24tcHJlbWl1bTogXCJcXEUwMDdcIlxuLy8kaWNvbi1za3lwZTogXCJcXEUwMDhcIlxuLy8kaWNvbi1zdGFuZGFyZC1iYWRnZTogXCJcXEUwMDlcIlxuLy8kaWNvbi1zdGFuZGFyZDogXCJcXEUwMEFcIlxuLy8kaWNvbi1zdGFydC1iYWRnZTogXCJcXEUwMEJcIlxuLy8kaWNvbi1zdGFydDogXCJcXEUwMENcIlxuLy8kaWNvbi10ZWw6IFwiXFxFMDBEXCJcbi8vJGljb24tdHJhZGluZzogXCJcXEUwMEVcIlxuLy8kaWNvbi10cmFpbmluZzogXCJcXEUwMEZcIlxuLy8kaWNvbi12azogXCJcXEUwMTBcIlxuLy9cbi8vXG4vL1xuLy8uaWNvbi1hbmFseXRpY3M6YmVmb3JlXG4vL1x0Y29udGVudDogJGljb24tYW5hbHl0aWNzXG4vLy5pY29uLWNsb3NlOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLWNsb3NlXG4vLy5pY29uLWNvbXBhbnk6YmVmb3JlXG4vL1x0Y29udGVudDogJGljb24tY29tcGFueVxuLy8uaWNvbi1jb250YWN0czpiZWZvcmVcbi8vXHRjb250ZW50OiAkaWNvbi1jb250YWN0c1xuLy8uaWNvbi1wYXJ0bmVyczpiZWZvcmVcbi8vXHRjb250ZW50OiAkaWNvbi1wYXJ0bmVyc1xuLy8uaWNvbi1wcmVtaXVtLWJhZGdlOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXByZW1pdW0tYmFkZ2Vcbi8vLmljb24tcHJlbWl1bTpiZWZvcmVcbi8vXHRjb250ZW50OiAkaWNvbi1wcmVtaXVtXG4vLy5pY29uLXNreXBlOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXNreXBlXG4vLy5pY29uLXN0YW5kYXJkLWJhZGdlOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXN0YW5kYXJkLWJhZGdlXG4vLy5pY29uLXN0YW5kYXJkOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXN0YW5kYXJkXG4vLy5pY29uLXN0YXJ0LWJhZGdlOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXN0YXJ0LWJhZGdlXG4vLy5pY29uLXN0YXJ0OmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXN0YXJ0XG4vLy5pY29uLXRlbDpiZWZvcmVcbi8vXHRjb250ZW50OiAkaWNvbi10ZWxcbi8vLmljb24tdHJhZGluZzpiZWZvcmVcbi8vXHRjb250ZW50OiAkaWNvbi10cmFkaW5nXG4vLy5pY29uLXRyYWluaW5nOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXRyYWluaW5nXG4vLy5pY29uLXZrOmJlZm9yZVxuLy9cdGNvbnRlbnQ6ICRpY29uLXZrXG4vL1xuXG4iLCJib2R5IHtcbiAgZm9udC1mYW1pbHk6IG9wZW5zYW5zLCBcIlJvYm90b0xpZ2h0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gIG1pbi13aWR0aDogMzIwcHg7XG4gIG1pbi1oZWlnaHQ6IDMyMHB4O1xufVxuIiwiLy8gZGVmYXVsdCBsYXlvdXRcclxuXHJcbi5jbGVhcmZpeCB7XHJcbiAgKnpvb206IDE7XHJcbn1cclxuXHJcbi5jbGVhcmZpeDpiZWZvcmUsXHJcbi5jbGVhcmZpeDphZnRlciB7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBsaW5lLWhlaWdodDogMDtcclxufVxyXG5cclxuLmNsZWFyZml4OmFmdGVyIHtcclxuICBjbGVhcjogYm90aDtcclxufVxyXG5cclxuYSxcclxuYTpiZWZvcmUsXHJcbmJ1dHRvbixcclxuYnV0dG9uOmJlZm9yZSxcclxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcclxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuMXMgZWFzZS1pbiwgY29sb3IgMC4xcyBlYXNlLWluLCBiYWNrZ3JvdW5kLWNvbG9yIDAuMXMgZWFzZS1pbjtcclxufVxyXG5cclxuJXJvdyB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBtYXgtd2lkdGg6ICR0YWJsZXQgKyBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuQG1peGluIGdyaWQoJGNvbHVtbnMtYW1vdW50OiAxMiwgJGNvbHVtbnMtcGFkZGluZzogNSwgJGNvbHVtbi1uYW1lOiBcImNvbC1cIikge1xyXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGNvbHVtbnMtYW1vdW50IHtcclxuICAgICUjeyRjb2x1bW4tbmFtZX0tI3skaX0ge1xyXG4gICAgICB3aWR0aDogMTAwJSAvICRjb2x1bW5zLWFtb3VudCAqICRpO1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogJGNvbHVtbnMtcGFkZGluZztcclxuICAgICAgcGFkZGluZy1yaWdodDogJGNvbHVtbnMtcGFkZGluZztcclxuICAgICAgbWluLWhlaWdodDogMXB4O1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAlI3skY29sdW1uLW5hbWV9LXJldmVyc2UtI3skaX0ge1xyXG4gICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgJSN7JGNvbHVtbi1uYW1lfS1vZmZzZXQtI3skaX0ge1xyXG4gICAgICBtYXJnaW4tbGVmdDogMTAwJSAvICRjb2x1bW5zLWFtb3VudCAqICRpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQGluY2x1ZGUgZ3JpZCgkY29sdW1uLW5hbWU6IFwiY29sXCIsICRjb2x1bW5zLXBhZGRpbmc6ICRjb2wtcGFkZGluZyk7XHJcblxyXG5AaW5jbHVkZSBtYXgtc2NyZWVuKCRtYXgtdGFibGV0KSB7XHJcbiAgJWJsb2NrIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgZmxvYXQ6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAlb2Zmc2V0IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gIH1cclxuXHJcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAxMiB7XHJcbiAgICAlY29sLSN7JGl9IHtcclxuICAgICAgQGV4dGVuZCAlYmxvY2s7XHJcbiAgICB9XHJcblxyXG4gICAgJWNvbC1vZmZzZXQtI3skaX0ge1xyXG4gICAgICBAZXh0ZW5kICVvZmZzZXQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQGluY2x1ZGUgbWF4LXNjcmVlbigkbWF4LXRhYmxldCkge1xyXG4gIEBpbmNsdWRlIGdyaWQoJGNvbHVtbi1uYW1lOiBcImNvbC1tZFwiLCAkY29sdW1ucy1wYWRkaW5nOiAxNXB4KTtcclxufVxyXG5cclxuXHJcbkBpbmNsdWRlIG1heC1zY3JlZW4oJG1heC1tb2JpbGUpIHtcclxuICAlYmxvY2sge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBmbG9hdDogbm9uZTtcclxuXHJcbiAgICAvLyBwYWRkaW5nLWxlZnQ6IDBcclxuICAgIC8vIHBhZGRpbmctcmlnaHQ6IDBcclxuXHJcbiAgfVxyXG5cclxuICAlb2Zmc2V0IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gIH1cclxuXHJcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAxMiB7XHJcbiAgICAlY29sLW1kLSN7JGl9IHtcclxuICAgICAgQGV4dGVuZCAlYmxvY2s7XHJcbiAgICB9XHJcblxyXG4gICAgJWNvbC1tZC1vZmZzZXQtI3skaX0ge1xyXG4gICAgICBAZXh0ZW5kICVvZmZzZXQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQGluY2x1ZGUgbWF4LXNjcmVlbigkbWF4LW1vYmlsZSkge1xyXG4gIEBpbmNsdWRlIGdyaWQoJGNvbHVtbi1uYW1lOiBcImNvbC1zbVwiLCAkY29sdW1ucy1wYWRkaW5nOiAxMHB4KTtcclxufVxyXG5cclxuXHJcbi5pcy1oaWRkZW4ge1xyXG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxubWFpbiB7XHJcbiAgbWluLWhlaWdodDogMTAwJTtcclxufSIsIi5tYXAge1xyXG4gIGhlaWdodDogNTAwcHg7XHJcbn1cclxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vXHJcbi8vICBBdXRob3I6IFJhZmFsIEJyb21pcnNraVxyXG4vLyAgd3d3OiBodHRwOi8vcGFyYW5vaWRhLmNvbS9cclxuLy8gIHR3aXR0ZXI6IGh0dHA6Ly90d2l0dGVyLmNvbS9wYXJhbm9pZGFcclxuLy8gIGRyaWJiYmxlOiBodHRwOi8vZHJpYmJibGUuY29tL3BhcmFub2lkYVxyXG4vL1xyXG4vLyAgTGljZW5zZWQgdW5kZXIgYSBNSVQgTGljZW5zZVxyXG4vL1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy9cclxuLy8gUmVxdWlyZW1lbnRzOlxyXG4vLyAgIFNhc3MgMy4yLjArXHJcbi8vXHJcbi8vICBWZXJzaW9uOlxyXG4vLyAgIDIuMiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRldmVsb3BlZCBvbiAyNS8wMi8yMDEzXHJcbi8vXHJcbi8vIFZhcmlhYmxlczpcclxuLy8gICAkdW5pdHM6IDFweDsgICAgICAgICAgICAgICAgICAgICAvLyBkZWZhdWx0IHVuaXRzIGZvciAnc2NyZWVuJyBtaXhpbnMgLSBpdCBtdXN0IGluY2x1ZGUgYSBkaWdpdCFcclxuLy9cclxuLy8gTWl4aW5zOlxyXG4vLyAgIEAgbWluLXNjcmVlbih3aWR0aCkgICAgICAgICAgICAgIC8vIHNob3J0Y3V0IGZvciBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoIC4uLilcclxuLy8gICBAIG1heC1zY3JlZW4od2lkdGgpICAgICAgICAgICAgICAvLyBzaG9ydGN1dCBmb3IgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aCAuLi4pXHJcbi8vICAgQCBzY3JlZW4obWluLXdpZHRoLCBtYXgtd2lkdGgpICAgLy8gc2hvcnRjdXQgZm9yIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGggLi4uKSBhbmQgKG1heC13aWR0aCAuLi4pXHJcbi8vICAgLS0tXHJcbi8vICAgQCBpcGhvbmUzICAgICAgICAgICAgICAgICAgICAgICAgLy8gb25seSBpUGhvbmUgKDIsIDNHLCAzR1MpIGxhbmRzY2FwZSAmIHBvcnRyYWl0XHJcbi8vICAgQCBpcGhvbmUzLWxhbmRzY2FwZSAgICAgICAgICAgICAgLy8gb25seSBpUGhvbmUgKDIsIDNHLCAzR1MpIG9ubHkgbGFuZHNjYXBlXHJcbi8vICAgQCBpcGhvbmUzLXBvcnRyYWl0ICAgICAgICAgICAgICAgLy8gb25seSBpUGhvbmUgKDIsIDNHLCAzR1MpIG9ubHkgcG9ydHJhaXRcclxuLy8gICAtLS1cclxuLy8gICBAIGlwaG9uZTQgICAgICAgICAgICAgICAgICAgICAgICAvLyBvbmx5IGlQaG9uZSAoNCwgNFMpIGxhbmRzY2FwZSAmIHBvcnRyYWl0XHJcbi8vICAgQCBpcGhvbmU0LWxhbmRzY2FwZSAgICAgICAgICAgICAgLy8gb25seSBpUGhvbmUgKDQsIDRTKSBvbmx5IGxhbmRzY2FwZVxyXG4vLyAgIEAgaXBob25lNC1wb3J0cmFpdCAgICAgICAgICAgICAgIC8vIG9ubHkgaVBob25lICg0LCA0Uykgb25seSBwb3J0cmFpdFxyXG4vLyAgIC0tLVxyXG4vLyAgIEAgaXBob25lNSAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9ubHkgaVBob25lICg1KSBsYW5kc2NhcGUgJiBwb3J0cmFpdFxyXG4vLyAgIEAgaXBob25lNS1sYW5kc2NhcGUgICAgICAgICAgICAgIC8vIG9ubHkgaVBob25lICg1KSBvbmx5IGxhbmRzY2FwZVxyXG4vLyAgIEAgaXBob25lNS1wb3J0cmFpdCAgICAgICAgICAgICAgIC8vIG9ubHkgaVBob25lICg1KSBvbmx5IHBvcnRyYWl0XHJcbi8vICAgLS0tXHJcbi8vICAgQCBpcGFkICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb25seSBpUGFkICgxLCAyLCBNaW5pKSBsYW5kc2NhcGUgJiBwb3J0cmFpdFxyXG4vLyAgIEAgaXBhZC1sYW5kc2NhcGUgICAgICAgICAgICAgICAgIC8vIG9ubHkgaVBhZCAoMSwgMiwgTWluaSkgb25seSBsYW5kc2NhcGVcclxuLy8gICBAIGlwYWQtcG9ydHJhaXQgICAgICAgICAgICAgICAgICAvLyBvbmx5IGlQYWQgKDEsIDIsIE1pbmkpIG9ubHkgcG9ydHJhaXRcclxuLy8gICAtLS1cclxuLy8gICBAIGlwYWQtcmV0aW5hICAgICAgICAgICAgICAgICAgICAvLyBvbmx5IGlQYWQgKDMsIDQpIGxhbmRzY2FwZSAmIHBvcnRyYWl0XHJcbi8vICAgQCBpcGFkLXJldGluYS1sYW5kc2NhcGUgICAgICAgICAgLy8gb25seSBpUGFkICgzLCA0KSBvbmx5IGxhbmRzY2FwZVxyXG4vLyAgIEAgaXBhZC1yZXRpbmEtcG9ydHJhaXQgICAgICAgICAgIC8vIG9ubHkgaVBhZCAoMywgNCkgb25seSBwb3J0cmFpdFxyXG4vLyAgIC0tLVxyXG4vLyAgIEAgaGRwaShyYXRpbykgICAgICAgICAgICAgICAgICAgIC8vIGRldmljZXMgd2l0aCBoaWRwaSBkaXNwbGF5cyAoZGVmYXVsdCByYXRpbzogMS4zKVxyXG4vL1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0gc2NyZWVuIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4kdW5pdHM6IDFweCAhZGVmYXVsdDtcclxuXHJcbkBtaXhpbiBzY3JlZW4oJHJlcy1taW4sICRyZXMtbWF4KSB7XHJcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogaWYodW5pdGxlc3MoJHJlcy1taW4pLCAkcmVzLW1pbiAqICR1bml0cywgJHJlcy1taW4pKSBhbmQgKG1heC13aWR0aDogaWYodW5pdGxlc3MoJHJlcy1tYXgpLCAkcmVzLW1heCAqICR1bml0cywgJHJlcy1tYXgpKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtYXgtc2NyZWVuKCRyZXMpIHtcclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBpZih1bml0bGVzcygkcmVzKSwgJHJlcyAqICR1bml0cywgJHJlcykpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIG1pbi1zY3JlZW4oJHJlcykge1xyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGlmKHVuaXRsZXNzKCRyZXMpLCAkcmVzICogJHVuaXRzLCAkcmVzKSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gcG9ydHJhaXQtbWF4LXNjcmVlbigkcmVzKSB7XHJcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkgYW5kIChtYXgtd2lkdGg6IGlmKHVuaXRsZXNzKCRyZXMpLCAkcmVzICogJHVuaXRzLCAkcmVzKSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbGFuZHNjYXBlLW1heC1zY3JlZW4oJHJlcykge1xyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC13aWR0aDogaWYodW5pdGxlc3MoJHJlcyksICRyZXMgKiAkdW5pdHMsICRyZXMpKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0gaGRwaSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyBCYXNlZCBvbiBib3VyYm9uIGhpZHBpLW1lZGlhLXF1ZXJpZXMgZmlsZSAoaHR0cHM6Ly9naXRodWIuY29tL3Rob3VnaHRib3QvYm91cmJvbi9ibG9iL21hc3Rlci9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2NzczMvX2hpZHBpLW1lZGlhLXF1ZXJ5LnNjc3MpXHJcbi8vIEhpRFBJIG1peGluLiBEZWZhdWx0IHZhbHVlIHNldCB0byAxLjMgdG8gdGFyZ2V0IEdvb2dsZSBOZXh1cyA3IChodHRwOi8vYmphbmdvLmNvbS9hcnRpY2xlcy9taW4tZGV2aWNlLXBpeGVsLXJhdGlvLylcclxuXHJcbkBtaXhpbiBoZHBpKCRyYXRpbzogMS4zKSB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAkcmF0aW8pLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi0tbW96LWRldmljZS1waXhlbC1yYXRpbzogJHJhdGlvKSwgb25seSBzY3JlZW4gYW5kICgtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAjeyRyYXRpb30vMSksIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246ICN7cm91bmQoJHJhdGlvICogOTYpfWRwaSksIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246ICN7JHJhdGlvfWRwcHgpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLSBpcGhvbmUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbkBtaXhpbiBpcGhvbmUge1xyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDMyMHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDQ4MHB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBpcGhvbmUzIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA0ODBweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gaXBob25lMy1wb3J0cmFpdCB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzIwcHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogNDgwcHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDEpIGFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBpcGhvbmUzLWxhbmRzY2FwZSB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzIwcHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogNDgwcHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDEpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tIGlwaG9uZS1yZXRpbmEgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuQG1peGluIGlwaG9uZTQge1xyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDMyMHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDQ4MHB4KSBhbmQgKC13ZWJraXQtZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSBhbmQgKGRldmljZS1hc3BlY3QtcmF0aW86IDIgLyAzKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBpcGhvbmU0LXBvcnRyYWl0IHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA0ODBweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChkZXZpY2UtYXNwZWN0LXJhdGlvOiAyIC8gMykgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGlwaG9uZTQtbGFuZHNjYXBlIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA0ODBweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChkZXZpY2UtYXNwZWN0LXJhdGlvOiAyIC8gMykgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0gaXBob25lLTUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5AbWl4aW4gaXBob25lNSB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzIwcHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogNTY4cHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpIGFuZCAoZGV2aWNlLWFzcGVjdC1yYXRpbzogNDAgLyA3MSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gaXBob25lNS1wb3J0cmFpdCB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzIwcHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogNTY4cHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpIGFuZCAoZGV2aWNlLWFzcGVjdC1yYXRpbzogNDAgLyA3MSkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGlwaG9uZTUtbGFuZHNjYXBlIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA1NjhweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChkZXZpY2UtYXNwZWN0LXJhdGlvOiA0MCAvIDcxKSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLSBpcGFkICsgaXBhZCBtaW5pIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbkBtaXhpbiBpcGFkIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDEpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGlwYWQtcG9ydHJhaXQge1xyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMSkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGlwYWQtbGFuZHNjYXBlIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDEpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gLS0tIGlwYWQtcmV0aW5hIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuQG1peGluIGlwYWQtcmV0aW5hIHtcclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogNzY4cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogMTAyNHB4KSBhbmQgKC13ZWJraXQtZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBpcGFkLXJldGluYS1wb3J0cmFpdCB7XHJcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGlwYWQtcmV0aW5hLWxhbmRzY2FwZSB7XHJcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBwb3J0cmFpdCB7XHJcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59Il19 */
